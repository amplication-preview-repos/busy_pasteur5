/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Audit as PrismaAudit } from "@prisma/client";

export class AuditServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AuditCountArgs, "select">): Promise<number> {
    return this.prisma.audit.count(args);
  }

  async audits(args: Prisma.AuditFindManyArgs): Promise<PrismaAudit[]> {
    return this.prisma.audit.findMany(args);
  }
  async audit(args: Prisma.AuditFindUniqueArgs): Promise<PrismaAudit | null> {
    return this.prisma.audit.findUnique(args);
  }
  async createAudit(args: Prisma.AuditCreateArgs): Promise<PrismaAudit> {
    return this.prisma.audit.create(args);
  }
  async updateAudit(args: Prisma.AuditUpdateArgs): Promise<PrismaAudit> {
    return this.prisma.audit.update(args);
  }
  async deleteAudit(args: Prisma.AuditDeleteArgs): Promise<PrismaAudit> {
    return this.prisma.audit.delete(args);
  }
}
